name: CI/CD for Flask App on Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest

    steps:
    # -----------------------------------
    # 1. Checkout the repository
    # -----------------------------------
    - name: Checkout Code
      uses: actions/checkout@v4

    # -----------------------------------
    # 2. Set up Docker for building images
    # -----------------------------------
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # -----------------------------------
    # 3. Build and Push Docker Image
    # -----------------------------------
    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME=kishna/test-todo-flask
        IMAGE_TAG=latest
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG

    # -----------------------------------
    # 4. Install SSH key to connect to EC2
    # -----------------------------------
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    # -----------------------------------
    # 5. Ensure k3s is installed on EC2
    # -----------------------------------
    - name: Install k3s if not installed
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          if ! command -v k3s &> /dev/null
          then
            echo 'Installing k3s...'
            curl -sfL https://get.k3s.io | sh -
          else
            echo 'k3s already installed.'
          fi
        "

    # -----------------------------------
    # 6. Deploy Kubernetes manifests
    # -----------------------------------
    - name: Deploy to Kubernetes
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          set -e
          
          echo 'Creating namespaces if not exist...'
          kubectl create namespace db --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace redis --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace app --dry-run=client -o yaml | kubectl apply -f -
          
          echo 'Deleting old resources...'
          kubectl delete -f ~/test-todo-flask/postgres/ --ignore-not-found=true
          kubectl delete -f ~/test-todo-flask/redis/ --ignore-not-found=true
          kubectl delete -f ~/test-todo-flask/flask/ --ignore-not-found=true
          
          echo 'Re-applying manifests...'
          kubectl apply -f ~/test-todo-flask/postgres/
          kubectl apply -f ~/test-todo-flask/redis/
          kubectl apply -f ~/test-todo-flask/flask/
          
          echo 'Deployment complete.'
        "
